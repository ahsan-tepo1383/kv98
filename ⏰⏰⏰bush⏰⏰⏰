#!/bin/bash

CYAN="\e[36m"
GREEN="\e[32m"
YELLOW="\e[33m"
RESET="\e[0m"

BASE_PATH="$HOME"
DOWNLOAD_DIR="/sdcard/Download/Akbar98"

# Git config fixed email and username
GIT_USER_NAME="YourGitUserName"
GIT_USER_EMAIL="youremail@example.com"
GIT_TOKEN="YOUR_PERSONAL_ACCESS_TOKEN"

git config --global user.name "$GIT_USER_NAME"
git config --global user.email "$GIT_USER_EMAIL"

echo -e "${CYAN}Have you already cloned the repo?${RESET}"
echo "1) No, clone a new repo"
echo "2) Yes, repo already cloned"
read -r CLONE_CHOICE

if [ "$CLONE_CHOICE" == "1" ]; then
    echo -ne "${CYAN}Enter the GitHub repo name to clone (e.g. reza-shah1320): ${RESET}"
    read -r REPO_NAME
    REPO_PATH="$BASE_PATH/$REPO_NAME"

    if [ -d "$REPO_PATH" ]; then
        echo -e "${YELLOW}Folder '$REPO_PATH' already exists!${RESET}"
    else
        echo -e "${GREEN}Cloning repo...${RESET}"
        git clone "https://$GIT_USER_NAME:$GIT_TOKEN@github.com/$GIT_USER_NAME/$REPO_NAME.git" "$REPO_PATH"
        if [ $? -ne 0 ]; then
            echo -e "${YELLOW}Failed to clone repo.${RESET}"
            exit 1
        fi
    fi

elif [ "$CLONE_CHOICE" == "2" ]; then
    echo -ne "${CYAN}Enter existing repo folder name: ${RESET}"
    read -r REPO_NAME
    REPO_PATH="$BASE_PATH/$REPO_NAME"
    if [ ! -d "$REPO_PATH" ]; then
        echo -e "${YELLOW}Folder '$REPO_PATH' not found! Exiting.${RESET}"
        exit 1
    fi
else
    echo -e "${YELLOW}Invalid choice. Exiting.${RESET}"
    exit 1
fi

cd "$REPO_PATH" || { echo -e "${YELLOW}Cannot enter repo folder.${RESET}"; exit 1; }

while true; do
    echo -e "\n${CYAN}Select an option:${RESET}"
    echo "1) Create new file"
    echo "2) Edit existing file"
    echo "3) Delete a file"
    echo "4) Commit changes"
    echo "5) Push to GitHub"
    echo "6) Copy file from download folder"
    echo "7) Exit"
    read -r CHOICE

    case $CHOICE in
        1)
            echo -ne "${CYAN}Enter new filename to create: ${RESET}"
            read -r NEWFILE
            if [ -e "$NEWFILE" ]; then
                echo -e "${YELLOW}File already exists.${RESET}"
            else
                touch "$NEWFILE"
                echo -e "${GREEN}File '$NEWFILE' created.${RESET}"
            fi
            ;;
        2)
            echo -ne "${CYAN}Enter filename to edit: ${RESET}"
            read -r EDITFILE
            if [ ! -e "$EDITFILE" ]; then
                echo -e "${YELLOW}File does not exist.${RESET}"
            else
                nano "$EDITFILE"
            fi
            ;;
        3)
            echo -ne "${CYAN}Enter filename to delete: ${RESET}"
            read -r DELFILE
            if [ ! -e "$DELFILE" ]; then
                echo -e "${YELLOW}File does not exist.${RESET}"
            else
                rm -i "$DELFILE"
                echo -e "${GREEN}File deleted.${RESET}"
            fi
            ;;
        4)
            git add .
            echo -ne "${CYAN}Enter commit message: ${RESET}"
            read -r MSG
            if [ -z "$MSG" ]; then MSG="auto update from script"; fi
            git commit -m "$MSG"
            ;;
        5)
            git push "https://$GIT_USER_NAME:$GIT_TOKEN@github.com/$GIT_USER_NAME/$REPO_NAME.git"
            ;;
        6)
            echo -ne "${CYAN}Enter source filename in download folder: ${RESET}"
            read -r SRCFILE
            SRC_PATH="$DOWNLOAD_DIR/$SRCFILE"
            if [ ! -f "$SRC_PATH" ]; then
                echo -e "${YELLOW}Source file not found.${RESET}"
                continue
            fi
            echo -ne "${CYAN}Enter target filename in repo folder: ${RESET}"
            read -r TARGETFILE
            cat "$SRC_PATH" > "$TARGETFILE"
            echo -e "${GREEN}Copied successfully.${RESET}"
            ;;
        7)
            echo "Exiting."
            exit 0
            ;;
        *)
            echo -e "${YELLOW}Invalid choice.${RESET}"
            ;;
    esac
done